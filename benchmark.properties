# Benchmark Configuration File
# This file defines the parameters for multi-level benchmark execution

# Matrix Size Thresholds (rows * cols)
# Small matrices: size < small_matrix threshold -> likely QUICK level
# Medium matrices: small_matrix <= size < medium_matrix -> may be QUICK or MEDIUM
# Large matrices: size >= large_matrix -> likely INTENSIVE level
threshold.small_matrix=100
threshold.medium_matrix=1000
threshold.large_matrix=5000

# Density Thresholds (percentage of 1s in the matrix)
# Sparse matrices: density < sparse_density -> easier, may lower level
# Medium density: sparse_density <= density < medium_density
# Dense matrices: density >= dense_density -> harder, may higher level
threshold.sparse_density=0.05
threshold.medium_density=0.2
threshold.dense_density=0.3

# Timeout Configuration (in milliseconds)
# Quick tests: for small/simple matrices
timeout.quick_ms=30000
# Medium tests: for intermediate complexity
timeout.medium_ms=300000
# Intensive tests: for large/complex matrices  
timeout.intensive_ms=1800000

# Output Configuration
# Enable detailed logging during execution
output.detailed_logging=true
# Show progress reports for each level
output.progress_reports=true
# Monitor memory usage during execution (experimental)
output.memory_monitoring=false
# Save intermediate results for each level
output.save_intermediate=true

# Execution Configuration
# Enable automatic level filtering (true) or run all with same timeout (false)
execution.level_filtering=true
# Stop execution on first failure (useful for debugging)
execution.stop_on_failure=false
# Which levels to execute (QUICK, MEDIUM, INTENSIVE)
execution.enabled_levels=QUICK,MEDIUM,INTENSIVE

# Advanced Options (for future extensions)
# Maximum concurrent executions (currently only 1 is supported)
execution.max_concurrent=1
# Enable experimental features
experimental.parallel_execution=false
experimental.adaptive_timeouts=false